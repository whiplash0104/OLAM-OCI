- name: Crea y Configura VCN
  hosts: localhost
  connection: local

  vars_files: vault.yaml

  tasks:
  - name: Crea a VCN
    oracle.oci.oci_network_vcn:
      compartment_id: "{{ compartment_ocid }}"
      display_name: "{{ vcn_name }}"
      cidr_block: "{{ vcn_cidr_block }}"
      dns_label: "{{ vcn_dns_label }}"
    register: vcn_resultado

  - set_fact:
      vcn_id: "{{ vcn_resultado.vcn.id }}"
  
  - name: Crea Internet Gateway
    oracle.oci.oci_network_internet_gateway:
      compartment_id: "{{ compartment_ocid }}"
      vcn_id: "{{ vcn_id }}"
      name: "{{ ig_name }}"
      is_enabled: true
    register: ig_resultado

  - set_fact:
      ig_id: "{{ ig_resultado.internet_gateway.id }}"
  
  - name: Modifica Default Route de VCN Para Salida a Internter de VCN
    oracle.oci.oci_network_route_table:
      id: "{{ vcn_resultado.vcn.default_route_table_id }}"
      route_rules:
      - cidr_block: '0.0.0.0/0'
        network_entity_id: '{{ ig_id }}'
    register: rt_resultado

  - set_fact:
      rt_id: "{{ rt_resultado.route_table.id }}"
  
  - name: Crea Subnets Para Worker en AD1, AD2 & AD3
    oracle.oci.oci_network_subnet:
      availability_domain: "{{ item.ad }}"
      cidr_block: "{{ item.cidr }}"
      compartment_id: "{{ compartment_ocid }}"
      display_name: "{{ item.subnet_name }}"
      vcn_id: '{{ vcn_id }}'
    loop:
      - { ad: '{{ ad1 }}', cidr: '{{ subnet1_cidr }}', subnet_name: '{{ subnet1_name }}' }
      - { ad: '{{ ad2 }}', cidr: '{{ subnet2_cidr }}', subnet_name: '{{ subnet2_name }}' }
      - { ad: '{{ ad3 }}', cidr: '{{ subnet3_cidr }}', subnet_name: '{{ subnet3_name }}' }
    register: sb_resultado

  - set_fact:
      ad1_subnet_id: "{{ sb_resultado.results[0].subnet.id }}"
      ad2_subnet_id: "{{ sb_resultado.results[1].subnet.id }}"
      ad3_subnet_id: "{{ sb_resultado.results[2].subnet.id }}"
  
  - name: Copia Template de Ingress a /tmp
    template: src=./templates/ingress_security_rules.yaml.j2 dest=/tmp/ingress_security_rules.yaml
  
  - name: Copia Template de Egress a /tmp
    template: src=./templates/egress_security_rules.yaml.j2 dest=/tmp/egress_security_rules.yaml
  
  - name: Carga Variables Ingress
    include_vars:
      file: /tmp/ingress_security_rules.yaml
      name: loaded_ingress
  
  - name: Imprime loaded_ingress
    debug:
      msg: "Variables de Ingress Cargadas {{loaded_ingress}}"
  
  - name: Carga Variables Egress
    include_vars:
      file: /tmp/egress_security_rules.yaml
      name: loaded_egress
  
  - name: Imprime loaded_egress
    debug:
      msg: "Variables de Egress Cargadas {{loaded_egress}}"
  
  - name: Agrega Reglas en Default Security List
    oracle.oci.oci_network_security_list:
      id: "{{ vcn_resultado.vcn.default_security_list_id }}"
      ingress_security_rules: "{{ loaded_ingress.ingress_security_rules_for_default_sec_list }}"
      egress_security_rules:  "{{ loaded_egress.egress_security_rules_for_default_sec_list }}"
      purge_security_rules: 'no'
    register: sl_resultado
  
  - name: Crea Security List Para Load Balancers
    oracle.oci.oci_network_security_list:
      name: "Load Balancers"
      compartment_id: "{{ compartment_ocid }}"
      vcn_id: "{{ vcn_id }}"
      ingress_security_rules: "{{ loaded_ingress.ingress_security_rules_for_lb }}"
      egress_security_rules: "{{ loaded_egress.egress_security_rules_for_lb }}"
    register: resultado
  
  - set_fact:
      lb_sec_list_id: "{{ resultado.security_list.id }}"
  
  - name: Crea Subnet Para Load Balancer en AD1 y AD2
    oracle.oci.oci_network_subnet:
      name: "{{ item.name }}"
      availability_domain: "{{ item.ad }}"
      compartment_id: "{{ compartment_ocid }}"
      cidr_block: "{{ item.cidr }}"
      vcn_id: "{{ vcn_id }}"
      security_list_ids:
        - "{{ lb_sec_list_id }}"
    loop:
      - { name: '{{ lb_subnet1_name }}', ad: '{{ ad1 }}', cidr: '{{ lb_subnet1_cidr }}' }
      - { name: '{{ lb_subnet2_name }}', ad: '{{ ad2 }}', cidr: '{{ lb_subnet2_cidr }}' }
    register: sb_lb_resultado

  - set_fact:
      lb_subnet1_id: "{{ sb_lb_resultado.results[0].subnet.id }}"
      lb_subnet2_id: "{{ sb_lb_resultado.results[1].subnet.id }}"


